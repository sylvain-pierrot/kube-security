aggregator:
  ## @param aggregator.image.registry aggregator image registry
  ## @param aggregator.image.repository aggregator image repository
  ## @param aggregator.image.tag aggregator image tag (immutable tags are recommended)
  ## @param aggregator.image.pullPolicy aggregator image pull policy
  ##
  image:
    registry: ghcr.io
    repository: sylvain-pierrot/kube-security/aggregator
    tag: latest
    pullPolicy: Always
  ## @param aggregator.replicaCount Number of aggregator replicas to deploy
  ##
  replicaCount: 1
  ## @param aggregator.containerPort aggregator custom container port
  ##
  containerPort: 5000
  ## @param aggregator.resources.limits The resources limits for containers
  ## @param aggregator.resources.requests The requested resources for containers
  ##
  resources:
    limits:
      memory: "512Mi"
      cpu: "500m"
    requests:
      memory: "512Mi"
      cpu: "500m"
  ## Autoscaling configuration
  ## @param aggregator.autoscaling.enabled Enable autoscaling for pods
  ## @param aggregator.autoscaling.minReplicas Minimum number of aggregator replicas
  ## @param aggregator.autoscaling.maxReplicas Maximum number of aggregator replicas
  ## @param aggregator.autoscaling.targetCPU Target CPU utilization percentage
  ## @param aggregator.autoscaling.targetMemory Target Memory utilization percentage
  ##
  autoscaling:
    enabled: true
    minReplicas: "1"
    maxReplicas: "5"
    averageUtilization: "80"
  ## @param aggregator.env Environment variables
  env:
    SERVICE_VERBS_URL: http://verbs.default.svc.cluster.local
    SERVICE_NOUNS_URL: http://nouns.default.svc.cluster.local

  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param aggregator.livenessProbe.enabled Enable livenessProbe on %%MAIN_CONTAINER_NAME%% containers
  ## @param aggregator.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param aggregator.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param aggregator.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param aggregator.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param aggregator.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3
    successThreshold: 1

  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param aggregator.readinessProbe.enabled Enable readinessProbe on %%MAIN_CONTAINER_NAME%% containers
  ## @param aggregator.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param aggregator.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param aggregator.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param aggregator.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param aggregator.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3
    successThreshold: 1

  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param aggregator.podSecurityContext.enabled Enable aggregator pods' Security Context
  ## @param aggregator.podSecurityContext.runAsNonRoot Set runAsNonRoot in aggregator pods' Security Context
  ##
  podSecurityContext:
    enabled: true
    runAsNonRoot: true

  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param aggregator.containerSecurityContext.enabled Enabled aggregator container' Security Context
  ## @param aggregator.containerSecurityContext.runAsNonRoot Set runAsNonRoot in aggregator container' Security Context
  ## @param aggregator.containerSecurityContext.runAsUser Set runAsUser in aggregator container' Security Context
  ## @param aggregator.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in aggregator container' Security Context
  ## @param aggregator.containerSecurityContext.privileged Set privileged in aggregator container' Security Context
  ## @param aggregator.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in aggregator container' Security Context
  ##
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1000
    readOnlyRootFilesystem: true
    privileged: false
    allowPrivilegeEscalation: false

nouns:
  ## @param nouns.image.registry nouns image registry
  ## @param nouns.image.repository nouns image repository
  ## @param nouns.image.tag nouns image tag (immutable tags are recommended)
  ## @param nouns.image.pullPolicy nouns image pull policy
  ##
  image:
    registry: ghcr.io
    repository: sylvain-pierrot/kube-security/nouns
    tag: latest
    pullPolicy: Always
  ## @param nouns.replicaCount Number of nouns replicas to deploy
  ##
  replicaCount: 1
  ## @param nouns.containerPort nouns custom container port
  ##
  containerPort: 5000
  ## @param nouns.resources.limits The resources limits for containers
  ## @param nouns.resources.requests The requested resources for containers
  ##
  resources:
    limits:
      memory: "512Mi"
      cpu: "500m"
    requests:
      memory: "512Mi"
      cpu: "500m"
  ## Autoscaling configuration
  ## @param nouns.autoscaling.enabled Enable autoscaling for pods
  ## @param nouns.autoscaling.minReplicas Minimum number of nouns replicas
  ## @param nouns.autoscaling.maxReplicas Maximum number of nouns replicas
  ## @param nouns.autoscaling.targetCPU Target CPU utilization percentage
  ## @param nouns.autoscaling.targetMemory Target Memory utilization percentage
  ##
  autoscaling:
    enabled: true
    minReplicas: "1"
    maxReplicas: "5"
    averageUtilization: "80"
  ## @param nouns.env Environment variables
  env: {}

  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param nouns.livenessProbe.enabled Enable livenessProbe on %%MAIN_CONTAINER_NAME%% containers
  ## @param nouns.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param nouns.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param nouns.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param nouns.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param nouns.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3
    successThreshold: 1

  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param nouns.readinessProbe.enabled Enable readinessProbe on %%MAIN_CONTAINER_NAME%% containers
  ## @param nouns.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param nouns.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param nouns.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param nouns.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param nouns.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3
    successThreshold: 1

  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param nouns.podSecurityContext.enabled Enable nouns pods' Security Context
  ## @param nouns.podSecurityContext.runAsNonRoot Set runAsNonRoot in nouns pods' Security Context
  ##
  podSecurityContext:
    enabled: true
    runAsNonRoot: true

  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param nouns.containerSecurityContext.enabled Enabled nouns container' Security Context
  ## @param nouns.containerSecurityContext.runAsNonRoot Set runAsNonRoot in nouns container' Security Context
  ## @param nouns.containerSecurityContext.runAsUser Set runAsUser in nouns container' Security Context
  ## @param nouns.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in nouns container' Security Context
  ## @param nouns.containerSecurityContext.privileged Set privileged in nouns container' Security Context
  ## @param nouns.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in nouns container' Security Context
  ##
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1000
    readOnlyRootFilesystem: false
    privileged: false
    allowPrivilegeEscalation: false

verbs:
  ## @param verbs.image.registry verbs image registry
  ## @param verbs.image.repository verbs image repository
  ## @param verbs.image.tag verbs image tag (immutable tags are recommended)
  ## @param verbs.image.pullPolicy verbs image pull policy
  ##
  image:
    registry: ghcr.io
    repository: sylvain-pierrot/kube-security/verbs
    tag: latest
    pullPolicy: Always
  ## @param verbs.replicaCount Number of verbs replicas to deploy
  ##
  replicaCount: 1
  ## @param verbs.containerPort verbs custom container port
  ##
  containerPort: 5000
  ## @param verbs.resources.limits The resources limits for containers
  ## @param verbs.resources.requests The requested resources for containers
  ##
  resources:
    limits:
      memory: "512Mi"
      cpu: "500m"
    requests:
      memory: "512Mi"
      cpu: "500m"
  ## Autoscaling configuration
  ## @param verbs.autoscaling.enabled Enable autoscaling for pods
  ## @param verbs.autoscaling.minReplicas Minimum number of verbs replicas
  ## @param verbs.autoscaling.maxReplicas Maximum number of verbs replicas
  ## @param verbs.autoscaling.targetCPU Target CPU utilization percentage
  ## @param verbs.autoscaling.targetMemory Target Memory utilization percentage
  ##
  autoscaling:
    enabled: true
    minReplicas: "1"
    maxReplicas: "5"
    averageUtilization: "80"
  ## @param verbs.env Environment variables
  env: {}

  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param verbs.livenessProbe.enabled Enable livenessProbe on %%MAIN_CONTAINER_NAME%% containers
  ## @param verbs.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param verbs.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param verbs.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param verbs.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param verbs.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3
    successThreshold: 1

  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param verbs.readinessProbe.enabled Enable readinessProbe on %%MAIN_CONTAINER_NAME%% containers
  ## @param verbs.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param verbs.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param verbs.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param verbs.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param verbs.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3
    successThreshold: 1

  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param verbs.podSecurityContext.enabled Enable verbs pods' Security Context
  ## @param verbs.podSecurityContext.runAsNonRoot Set runAsNonRoot in verbs pods' Security Context
  ##
  podSecurityContext:
    enabled: true
    runAsNonRoot: true

  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param verbs.containerSecurityContext.enabled Enabled verbs container' Security Context
  ## @param verbs.containerSecurityContext.runAsNonRoot Set runAsNonRoot in verbs container' Security Context
  ## @param verbs.containerSecurityContext.runAsUser Set runAsUser in verbs container' Security Context
  ## @param verbs.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in verbs container' Security Context
  ## @param verbs.containerSecurityContext.privileged Set privileged in verbs container' Security Context
  ## @param verbs.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in verbs container' Security Context
  ##
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1000
    readOnlyRootFilesystem: false
    privileged: false
    allowPrivilegeEscalation: false
